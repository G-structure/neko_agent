# Copy to .env and fill in. Do not commit .env.
# Format: KEY=value (no "export"). Quote values that contain spaces or JSON.

########################################
# TEE/Dstack Configuration
########################################
# VMM URL for legacy dstack CLI (vmm-cli.py)
DSTACK_VMM_URL="https://web.h200..."

# VMM Authentication (for legacy CLI)
# Required if your dstack-vmm server requires authentication
DSTACK_VMM_AUTH_USER="your-username"
DSTACK_VMM_AUTH_PASSWORD="your-password"

# Phala Cloud API Configuration
# Get your API key from https://cloud.phala.network/
PHALA_CLOUD_API_KEY="phak_..."

# Blockchain Configuration (for on-chain KMS)
# Private key for deploying App contracts (Base network)
PRIVATEKEY="0x..."
RPC_URL="https://base.llamarpc.com"

# Hugging Face Configuration
# Token for accessing Hugging Face models and datasets
HUGGING_FACE_HUB_TOKEN="hf_..."

########################################
# OCI Registry Configuration
########################################
# Local registry settings (for nix run .#start-registry)
NEKO_REGISTRY_PORT=5000                       # Port for local registry
NEKO_REGISTRY_USER="neko"                     # Registry username
NEKO_REGISTRY_PASSWORD="pushme"               # Registry password
NEKO_REGISTRY_DATA_DIR="./registry-data"      # Data directory
NEKO_REGISTRY_AUTH_DIR="./auth"               # Auth directory
NEKO_REGISTRY_REGENERATE_AUTH=false           # Force auth file regeneration

# Deployment registry (overrides flake default)
# Examples:
#   NEKO_REGISTRY="localhost:5000/neko"         # Local registry
#   NEKO_REGISTRY="ttl.sh"                      # Ephemeral registry
#   NEKO_REGISTRY="ghcr.io/your-org"           # GitHub Container Registry
#   NEKO_REGISTRY="docker.io/your-org"         # Docker Hub
#   NEKO_REGISTRY="registry.example.com/neko"  # Custom registry
NEKO_REGISTRY="localhost:5000/neko"

# TTL for ephemeral registries like ttl.sh (examples: 1h, 24h, 7d)
NEKO_TTL="1h"

# Whether to push images during deployment (true/false)
NEKO_PUSH=true

# Cloudflare Tunnel Configuration (for nix run .#start-cloudflare-tunnel)
NEKO_CF_TUNNEL_NAME="neko-registry"           # Tunnel name
NEKO_CF_HOSTNAME="registry.example.com"      # Your domain (must be in Cloudflare)

########################################
# Auth & Endpoints (Agent + Capture)
########################################
# Option A: direct WebSocket (bypass REST login)
# NEKO_WS="wss://neko.example.com/api/ws?token=..."

# Option B: REST login that yields a WS token
NEKO_URL="https://neko.example.com"    # Base HTTP(S) URL for login
NEKO_USER=""                           # Username for REST login
NEKO_PASS=""                           # Password for REST login

########################################
# Agent Logging / Metrics
########################################
NEKO_LOGLEVEL=INFO                     # DEBUG, INFO, WARNING, ERROR
# NEKO_LOGFILE="/path/to/neko_agent.log"  # Optional file for structured logs
NEKO_METRICS_PORT=9000                 # Prometheus port

########################################
# Agent Behavior
########################################
NEKO_TASK="Search the weather"         # Default task if not passed via CLI
NEKO_MODE="web"                        # "web" or "phone"
NEKO_MAX_STEPS=8                       # Max navigation steps
NEKO_AUDIO=1                           # 1 to enable audio, 0 to disable
REFINEMENT_STEPS=5                     # Coordinate refinement passes
NEKO_ICE_POLICY="strict"               # ICE policy hint for your stack ("strict" or "all")
# NEKO_RUN_ID="dev-run-abc123"         # Optional run identifier
NEKO_RTCP_KEEPALIVE=0                  # 1 to send RTCP keepalives for long-lived TURN/NAT sessions

########################################
# Model Config
########################################
REPO_ID="showlab/ShowUI-2B"
SIZE_SHORTEST_EDGE=224
SIZE_LONGEST_EDGE=1344

########################################
# Agent Paths / Artifacts
########################################
OFFLOAD_FOLDER="./offload"             # Used on MPS, created if missing
# FRAME_SAVE_PATH="./tmp/frame.png"    # Optional last-frame snapshot
# CLICK_SAVE_PATH="./tmp/actions"      # Optional dir for action-marked frames

########################################
# STUN / TURN (Agent)
########################################
NEKO_STUN_URL="stun:stun.l.google.com:19302"
# NEKO_TURN_URL="turn:turn.example.com:3478"  # add ?transport=tcp if needed
# NEKO_TURN_USER=""
# NEKO_TURN_PASS=""

########################################
# Capture (src/capture.py)
########################################
# Output — MDS shards
CAPTURE_OUT="./data/mds"               # Local MDS directory (staging/cache)
CAPTURE_REMOTE=""                      # Optional remote: e.g., s3://bucket/prefix
CAPTURE_KEEP_LOCAL=0                   # 1 to keep local shards when remote is set
CAPTURE_COMPRESSION="zstd:6"           # Shard compression (ratio:speed)
CAPTURE_SHARD_SIZE="512mb"             # Target shard size before rolling
CAPTURE_HASHES="sha1"                  # Comma-separated hash list for integrity
CAPTURE_LOGLEVEL="INFO"                # DEBUG/INFO/WARNING/ERROR

# Frame capture
CAPTURE_FPS=2.0                        # Polls per second for /screen/shot.jpg
CAPTURE_JPEG_QUALITY=85                # JPEG quality (0-100)
CAPTURE_MIN_FRAMES=4                   # Discard episodes shorter than this
CAPTURE_EPISODE_TIMEOUT=900            # Seconds of inactivity to auto-end

########################################
# S3 / S3-Compatible Credentials (Capture)
########################################
# Only needed if CAPTURE_REMOTE is an s3:// URI.
# AWS_ACCESS_KEY_ID=""
# AWS_SECRET_ACCESS_KEY=""
# AWS_SESSION_TOKEN=""                  # optional
# AWS_DEFAULT_REGION="us-east-1"
# S3_ENDPOINT_URL="https://minio.example.com"  # For MinIO/Cloudflare R2/etc.

########################################
# Notes
########################################
# - For JSON values, use single quotes to avoid shell parsing:
#   NEKO_ICESERVERS='[{"urls":["stun:stun.l.google.com:19302"]}]'

########################################
# Training (src/train.py) — Finetuning
########################################
# Data sources (MDS)
TRAIN_LOCAL="./data/mds"              # local MDS dir (defaults to CAPTURE_OUT)
# TRAIN_REMOTE="s3://bucket/prefix"    # optional remote MDS
TRAIN_CACHE="./data/cache"            # local cache for StreamingDataset

# Output/checkpoints
TRAIN_OUTPUT="./checkpoints"          # where to save model+processor

# Logging
TRAIN_LOGLEVEL=INFO                    # DEBUG|INFO|WARNING|ERROR
TRAIN_LOG_FORMAT=text                  # text|json

# Optimization
TRAIN_EPOCHS=1
TRAIN_BATCH=1
TRAIN_ACCUM=1
TRAIN_LR=5e-6
TRAIN_WD=0.0
TRAIN_MAX_STEPS=0                      # 0 disables step cap
TRAIN_MAX_SAMPLES_PER_EPOCH=0          # 0 disables per-epoch cap
TRAIN_HISTORY_STEPS=0                  # include N prior actions in prompt
SEED=1337

########################################
# Yap (src/yap.py) — WebRTC TTS Broadcaster
########################################
# Connection (choose one)
# YAP_WS="wss://neko.example.com/api/ws?token=..."  # Direct WS for Yap
# If YAP_WS is not set, Yap will use NEKO_URL/NEKO_USER/NEKO_PASS to login.

# Logging / Metrics (Yap-specific)
YAP_LOGLEVEL=INFO                      # DEBUG/INFO/WARNING/ERROR (Yap)
YAP_LOG_FORMAT=text                    # text | json
# YAP_METRICS_PORT=9100                # Optional; falls back to PORT if set

# WebRTC / Audio playout
YAP_SR=48000                           # Output sample rate (WebRTC expects 48k)
YAP_AUDIO_CHANNELS=1                   # 1=mono, 2=stereo
YAP_FRAME_MS=20                        # Opus frame size (10/20/30/40/60)
YAP_JITTER_MAX_SEC=6.0                 # Max seconds of PCM in jitter buffer

# TTS pipeline
YAP_PARALLEL=2                         # Parallel F5-TTS workers
YAP_CHUNK_TARGET_SEC=3.0               # Target chunk duration (heuristic)
YAP_MAX_CHARS=350                      # Hard cap per chunk
YAP_OVERLAP_MS=30                      # Crossfade overlap between chunks (ms)

# Voices
YAP_VOICES_DIR="./voices"              # voices.json lives here; ref wavs too
YAP_SPK_DEFAULT="default"              # Default speaker id

# Debug/Testing
# YAP_SAVE_AUDIO_DIR="./tmp/yap_audio"  # Optional: save synthesized audio chunks for debugging

# ICE policy (Yap)
YAP_ICE_POLICY="strict"                # 'strict' uses server-provided ICE only; 'all' appends env
YAP_STUN_URL="stun:stun.l.google.com:19302"
# YAP_TURN_URL="turn:turn.example.com:3478"  # add ?transport=tcp if needed
# YAP_TURN_USER=""
# YAP_TURN_PASS=""

# Hosting note (some platforms inject PORT)
# PORT=9100
